{
  "name": "gulp-dotnet-assembly-info",
  "version": "0.1.11",
  "description": "Gulp plugin for editing .NET assembly info files.",
  "homepage": "https://github.com/mikeobrien/gulp-dotnet-assembly-info",
  "main": "plugin.js",
  "bugs": {
    "url": "https://github.com/mikeobrien/gulp-dotnet-assembly-info/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mikeobrien/gulp-dotnet-assembly-info.git"
  },
  "keywords": [
    "gulp",
    ".net",
    "dotnet",
    "assembly"
  ],
  "scripts": {
    "test": "gulp"
  },
  "author": {
    "name": "Mike O'Brien"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "files": [
    "plugin.js",
    "README.md",
    "LICENSE"
  ],
  "dependencies": {
    "through2": "~0.6.3",
    "gulp-util": "~3.0.1"
  },
  "devDependencies": {
    "expect.js": "~0.3.1",
    "gulp-mocha": "~1.1.1",
    "gulp-jshint": "~1.9.0",
    "gulp": "~3.8.10",
    "gulp-filter": "~1.0.2",
    "vinyl": "~0.4.3",
    "handlebars": "~2.0.0"
  },
  "readme": "# gulp-dotnet-assembly-info\n\n\n[![npm version](http://img.shields.io/npm/v/gulp-dotnet-assembly-info.svg?style=flat)](https://npmjs.org/package/gulp-dotnet-assembly-info) [![build status](http://img.shields.io/travis/mikeobrien/gulp-dotnet-assembly-info.svg?style=flat)](https://travis-ci.org/mikeobrien/gulp-dotnet-assembly-info) [![Dependency Status](http://img.shields.io/david/mikeobrien/gulp-dotnet-assembly-info.svg?style=flat)](https://david-dm.org/mikeobrien/gulp-dotnet-assembly-info) [![npm downloads](http://img.shields.io/npm/dm/gulp-dotnet-assembly-info.svg?style=flat)](https://npmjs.org/package/gulp-dotnet-assembly-info)\n\n[Gulp](http://gulpjs.com/) plugin for modifying C# assembly info files.\n\n## Install\n\n```bash\n$ npm install gulp-dotnet-assembly-info --save\n```\n\n## Usage\n\nSimply pass in an object containing the attibutes and their replacements. The replacement can be a value or a function. A function is passed the value specified in the original assembly info file and returns the replacement value. The convention for attribute names is the name without the `Assembly` prefix and [camel cased](http://en.wikipedia.org/wiki/CamelCase). So an attribute name of `fileVersion` will be converted to `AssemblyFileVersion`. The files can simply be replaced by piping them to the same location (`.pipe(gulp.dest('.'))`) or to a new location.\n\n```js\nvar gulp = require('gulp'),\n    assemblyInfo = require('gulp-dotnet-assembly-info');\n\ngulp.task('assemblyInfo', function() {\n    gulp.src('**/AssemblyInfo.cs')\n        .pipe(assemblyInfo({\n            title: 'Planet Express Website',\n            description: 'Shipping and tracking website.', \n            configuration: 'Release', \n            company: 'Planet Express', \n            product: 'Planet Express Website', \n            copyright: 'Copyright 3002 Â© Planet Express', \n            trademark: 'Planet Express', \n            culture: 'div-MV',\n            version: function(value) { return value + '.2345'; },\n            fileVersion: function(value) { return '2.0.3.2345'; },\n            ...\n        }))\n        .pipe(gulp.dest('.'));\n});\n```\n\n## License\nMIT License\n",
  "_id": "gulp-dotnet-assembly-info@0.1.11",
  "_shasum": "9671cb1a87be6cce2cd6134375f503f20c373bdc",
  "_from": "gulp-dotnet-assembly-info@^0.1.10",
  "_resolved": "https://registry.npmjs.org/gulp-dotnet-assembly-info/-/gulp-dotnet-assembly-info-0.1.11.tgz"
}
